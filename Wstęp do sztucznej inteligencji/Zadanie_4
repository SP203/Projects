import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

url = "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
data = pd.read_csv(url, sep=';')
data['quality_binary'] = (data['quality'] >= 6).astype(int)
X = data.drop(['quality', 'quality_binary'], axis=1)
y = data['quality_binary']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

svm_rbf = SVC(kernel='rbf', C=10, gamma=1)
svm_rbf.fit(X_train_scaled, y_train)
y_pred_rbf = svm_rbf.predict(X_test_scaled)

svm_lin = SVC(kernel='linear', C=10)
svm_lin.fit(X_train_scaled, y_train)
y_pred_lin = svm_lin.predict(X_test_scaled)

lr = LogisticRegression(max_iter=1000, C=10)
lr.fit(X_train_scaled, y_train)
y_pred_lr = lr.predict(X_test_scaled)

print("SVM RBF:\n", classification_report(y_test, y_pred_rbf))
print("SVM Linear:\n", classification_report(y_test, y_pred_lin))
print("Regresja Logistyczna:\n", classification_report(y_test, y_pred_lr))
